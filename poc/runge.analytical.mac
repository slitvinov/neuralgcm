a_ex : [[1/3], [1/6, 1/2], [1/2, -1/2, 1]];
b_ex : [1/2, -1/2, 1, 0];

a_im : [[1/6, 1/6], [1/3, 0, 1/3], [a, 0, b, c]];
b_im : [a, 0, b, c];

num_steps : length(b_ex);

F(y) := 0;
G(y) := G0 + G1 * y;
define(G_inv('Y_star, 'gamma), rhs(solve('Y_star = 'y + gamma * G('y), 'y)[1]))$

f : makelist(0, i, 1, num_steps);
g : makelist(0, i, 1, num_steps);

y: y0;
f[1] : F(y);
g[1] : G(y);
for i : 2 thru num_steps do (
    ex_terms : t * sum(a_ex[i - 1][j] * f[j], j, 1, i - 1),
    im_terms : t * sum(a_im[i - 1][j] * g[j], j, 1, i - 1),
    Y_star : y + ex_terms + im_terms,
    Y : G_inv(Y_star, t * a_im[i - 1][i]),
    f[i] : F(Y),
    g[i] : G(Y)
);
ex_terms : t * sum(b_ex[j] * f[j], j, 1, num_steps);
im_terms : t * sum(b_im[j] * g[j], j, 1, num_steps);
y : ex_terms + im_terms;

y: ratexpand(taylor(y, t, 0, 8));
e1: factor(coeff(y, t, 1));
e2: factor(coeff(y, t, 2));

eq: 'diff('y, t) = G('y) + F('y);
sol: ic1(ode2(eq, 'y, 't), 't = 0, 'y = y0);

res: y - rhs(sol);
res0: ratexpand(taylor(res, t, 0, 4));

e: makelist(coeff(res0, t, i), i, 1, 2);
solve(factor(e), [a, b]), c= 1/4, G0 = 1, G1 = 1, y0 = 1;
