a_im : [[1/6, 1/6], [1/3, 0, 1/3], [a, 0, b, c]] $
b_im : [a, 0, b, c] $
num_steps : 4 $

G(y) := 1 + y $
define(dG('y), diff(G('y), 'y)) $
so: linsolve((1 - 'gamma * dG('y)) * 'y = 'Y_star, 'y) $
define(G_inv('Y_star, 'gamma), rhs(so[1])) $
g[1] : G(0) $
for i : 2 thru num_steps do (
    Y_star : dt * sum(a_im[i - 1][j] * g[j], j, 1, i - 1),
    Y : G_inv(Y_star, dt * a_im[i - 1][i]),
    g[i] : G(Y)
);
y: dt * sum(b_im[j] * g[j], j, 1, num_steps);
y: ratexpand(taylor(y, dt, 0, 2));
e1: factor(coeff(y, dt, 1));
e2: factor(coeff(y, dt, 2));

x: x1 * dt + x2 * dt^2 + x3 * dt^3;
res: diff(x, dt) - G(x);
res: ratexpand(taylor(res, dt, 0, 4));

eq: [coeff(res, dt, 0), coeff(res, dt, 1)];
so: linsolve(eq, [x1, x2]);

eq: [e1 = assoc(x1, so), e2 = assoc(x2, so)];
so: solve(eq, [a, b]);
so, c = 1/2;
