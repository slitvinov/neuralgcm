[a, b, c]:  [3/8, 3/8, 1/4];
a_im : [[1/6, 1/6], [1/3, 0, 1/3], [a, 0, b, c]] $
b_im : [a, 0, b, c] $
num_steps : 4 $

y0: 1 $
G(y) := y $
define(G_inv('Y_star, 'gamma), rhs(solve('Y_star = 'y + gamma * G(y), 'y)[1]))$
g[1] : G(y0) $
for i : 2 thru num_steps do (
    Y_star : y0 + dt * sum(a_im[i - 1][j] * g[j], j, 1, i - 1),
    Y : G_inv(Y_star, dt * a_im[i - 1][i]),
    g[i] : G(Y)
);
y: dt * sum(b_im[j] * g[j], j, 1, num_steps);
res: diff(y, dt) - G(y);
res: ratexpand(taylor(res, dt, 0, 4));

eq: [coeff(res, dt, 0), coeff(res, dt, 1)];

